 public static boolean connectiontodatabase(double amountdebit, String balancedescription, int USERID) {//this is debit connection
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/ledger?useUnicode=true&characterEncoding=utf8&useSSL=false", "root", "123456");
            String sql = "SELECT balance FROM transactions WHERE user_id = ? ORDER BY date DESC LIMIT 1";
            pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, USERID);
            rs = pstmt.executeQuery();
            double currentbalance = 0.00;
            if (rs.next()) {
                currentbalance = rs.getDouble("balance");
            }
            if ("activate".equalsIgnoreCase(confirmactivate(USERID))){
                double savingpercentage = searchpercentage(USERID);//从数据库中找到percentage提取出来
                double amountsavings = amountdebit * (savingpercentage/100.00);//这是计算的saving的值还得给到saving_balance数据库中
                double newdebit = amountdebit*(1 - savingpercentage/100.00);//因为激活了saving所以debit要重新计算amountdebit*（1-percentage）
                updatesaving_balance(USERID, amountsavings);//把amountsavings更新到saving_balance中（其实是加上amountsavings）
                updateaccount_balance(USERID, newdebit);//这个在这里按理来说是加上新的debit的值及newdebit的值

                amountdebit = amountdebit - amountsavings;


                double newbalance = currentbalance + amountdebit;

                String insert = "INSERT INTO Transactions(user_id, amount, description, transaction_type, balance) VALUES (?, ?, ?, 'debit', ?)";
                pstmt = conn.prepareStatement(insert);
                     pstmt.setInt(1, USERID);
                    pstmt.setDouble(2, newdebit);
                    pstmt.setString(3, balancedescription);
                    pstmt.setDouble(4, newbalance);
                    int countinsert = pstmt.executeUpdate();
                    if (countinsert > 0) {
                        System.out.println("Transaction Successfully Record!!!");
                    }
            }
            else {
                double newbalance = currentbalance + amountdebit;
                String insert = "INSERT INTO Transactions(user_id, amount, description, transaction_type, balance) VALUES (?, ?, ?, 'debit', ?)";
                pstmt = conn.prepareStatement(insert);
                pstmt.setInt(1, USERID);
                pstmt.setDouble(2, amountdebit);
                pstmt.setString(3, balancedescription);
                pstmt.setDouble(4, newbalance);
                int countInsert = pstmt.executeUpdate();

                if (countInsert > 0) {
                    return true;

                }
            }
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        } finally {
            try {
                if (pstmt != null) pstmt.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        return false;
    }

//this is credit connection
public static boolean creditconnectiondatabase(double credit, String creditdescription, int USERID){
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;


        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            ////获取连接
            conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/ledger?useUnicode=true&characterEncoding=utf8&useSSL=false", "root", "123456");
            //
            String sql = "SELECT balance FROM transactions WHERE user_id = ? ORDER BY date DESC LIMIT 1";
            pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, USERID);
            rs = pstmt.executeQuery();
            double currentbalance = 0.00;

            if (rs.next()) {
                currentbalance = rs.getDouble("balance");
            }
            double newbalance = currentbalance - credit;
            String insert = "INSERT INTO Transactions(user_id, amount, description, transaction_type, balance) VALUES (?, ?, ?, 'credit', ?)";


                pstmt = conn.prepareStatement(insert);
                pstmt.setInt(1, USERID);
                pstmt.setDouble(2, credit);
                pstmt.setString(3, creditdescription);
                pstmt.setDouble(4, newbalance);
                int row = pstmt.executeUpdate();
                if (row > 0) {
                    return true;
                }
            } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }


        return false;

    }
